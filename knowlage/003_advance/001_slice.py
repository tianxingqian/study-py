#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# 切片
L = ['Michael', 'Sarah', 'Tracy', 'Bob', 'Jack']
print(L)
# 取前3个元素
print([L[0], L[1], L[2]])  # 笨方法，多个的时候就变得复杂了
#   对这种经常取指定索引范围的操作，用循环十分繁琐，因此，Python提供了切片（Slice）操作符，能大大简化这种操作。
#   对应上面的问题，取前3个元素，用一行代码就可以完成切片：
print(L[0:3])  #    L[0:3]表示，从索引0开始取，直到索引3为止，但不包括索引3。即索引0，1，2，正好是3个元素。
#   如果第一个索引是0，还可以省略：
print(L[:3])
print(L[1:3]) #  从索引1开始，取出2个元素出来：
#   既然Python支持L[-1]取倒数第一个元素，那么它同样支持倒数切片，试试：
print(L[-2:])  #    倒数第一个元素的索引是-1。

# 切片操作十分有用。我们先创建一个0-99的数列：
L = list(range(100))
#   可以通过切片轻松取出某一段数列。比如前10个数：
print(L[:10])
print(L[-10:])      # 后10个
print(L[10:20])     # 11 ~ 20

#取前10个数，每两个取一个：
print(L[:10:2])  # 结果 [0, 2, 4, 6, 8]
#所有数，每5个取一个：
print(L[::5])       # [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95]
# 只写[:]就可以原样复制一个list
print(L[:])


# tuple 是特殊的list，因此也可以使用切片，操作结果仍是tuple
print((0, 1, 2, 3, 4, 5)[:3])   # 结果(0, 1, 2)

# 字符串'xxx'也可以看成是一种list，每个元素就是一个字符。因此，字符串也可以用切片操作，只是操作结果仍是字符串：
print( 'ABCDEFG'[:3])       # ABC
print('ABCDEFG'[::2])       # ACEG